@model CMCS.Models.Claim
@{
    ViewData["Title"] = "Submit Claim";
}
<h2>Submit Claim</h2>

<form asp-action="Create" asp-controller="Claim" method="post" enctype="multipart/form-data" class="row g-3" id="claimForm">
    @Html.AntiForgeryToken()
    <div class="col-md-6">
        <label>Lecturer</label>
        <input asp-for="Lecturer" class="form-control" readonly />
    </div>
    <div class="col-md-3">
        <label>Hours Worked</label>
        <input asp-for="HoursWorked" class="form-control" type="number" min="0" id="hours" />
    </div>
    <div class="col-md-3">
        <label>Hourly Rate (R)</label>
        <input asp-for="HourlyRate" class="form-control" type="number" step="0.01" min="0" id="rate" />
    </div>
    <div class="col-md-3">
        <label>Amount (R)</label>
        <input id="amount" class="form-control" readonly />
    </div>
    <div class="col-12">
        <label>Notes</label>
        <textarea asp-for="Notes" class="form-control"></textarea>
    </div>
    <div class="col-md-6">
        <label>Supporting Document (.pdf, .docx, .xlsx) - max 5MB</label>
        <input name="file" type="file" class="form-control" id="file" accept=".pdf,.docx,.xlsx" />
    </div>
    <div class="col-12">
        <button class="btn btn-success">Submit</button>
    </div>
</form>

@section Scripts {
<script>
(function(){
    var hoursEl = document.getElementById('hours');
    var rateEl = document.getElementById('rate');
    var amountEl = document.getElementById('amount');
    function updateAmount() {
        var h = parseFloat(hoursEl.value) || 0;
        var r = parseFloat(rateEl.value) || 0;
        amountEl.value = (h * r).toFixed(2);
    }
    if (hoursEl) hoursEl.addEventListener('input', updateAmount);
    if (rateEl) rateEl.addEventListener('input', updateAmount);

    document.getElementById('claimForm').addEventListener('submit', function(e){
        var f = document.getElementById('file').files[0];
        if (f) {
            var max = 5 * 1024 * 1024; // 5MB
            var allowedExt = ['.pdf', '.docx', '.xlsx'];
            var name = f.name.toLowerCase();
            if (f.size > max) {
                alert('File is too large (max 5MB).');
                e.preventDefault();
                return false;
            }
            if (!allowedExt.some(function(ext){ return name.endsWith(ext); })) {
                alert('Unsupported file type. Use .pdf, .docx or .xlsx');
                e.preventDefault();
                return false;
            }
        }
    });
})();
</script>
}
